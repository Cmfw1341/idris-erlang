%% -*- erlang -*-
%%! -smp enable -pa /Users/sam/Coursework/CS4099-MSP/sandbox/share/x86_64-osx-ghc-7.6.3/idris-erlang-0.0.1.0/irts
%% Generated by the Idris -> Erlang Compiler (idris-erlang).

-module(main).


-mode(compile).    %% Escript
-export([main/1]). %% Escript.

-compile(nowarn_unused_function).
-compile(nowarn_unused_vars).

-define(TRUE, 1).
-define(FALSE, 0).

'APPLY0'(Fn0, Arg0) -> case Fn0 of
{'U_Erl_closeFile, close1', P_c0, P_c1} -> 'Erl_closeFile:close:0'(P_c0, P_c1, Arg0);
{'U_Erl_feof, fileEOF1', P_c0, P_c1} -> 'Erl_feof:fileEOF:0'(P_c0, P_c1, Arg0);
{'U_Erl_fgetc, getChar1', P_c0, P_c1} -> 'Erl_fgetc:getChar:0'(P_c0, P_c1, Arg0);
{'U_Erl_fread1', P_c0} -> 'Erl_fread'(P_c0, Arg0);
{'U_Erl_fwrite, writeFile1', P_c0, P_c1, P_c2, P_c3} -> 'Erl_fwrite:writeFile:0'(P_c0, P_c1, P_c2, P_c3, Arg0);
{'U_Erl_openFile, open1', P_c0, P_c1, P_c2, P_c3} -> 'Erl_openFile:open:0'(P_c0, P_c1, P_c2, P_c3, Arg0);
'U_Erl_feof01' -> 'Erl_feof0'(Arg0);
'U_Erl_fgetc01' -> 'Erl_fgetc0'(Arg0);
'U_Erl_fwrite01' -> 'Erl_fwrite0'(Arg0);
'U_Erl_openFile01' -> 'Erl_openFile0'(Arg0);
{'U_Main_testFiles01', P_c0} -> 'Main_testFiles0'(P_c0, Arg0);
'U_Main_testFiles101' -> 'Main_testFiles10'(Arg0);
'U_Main_testFiles11' -> 'Main_testFiles1'(Arg0);
'U_Main_testFiles21' -> 'Main_testFiles2'(Arg0);
{'U_Main_testFiles31', P_c0} -> 'Main_testFiles3'(P_c0, Arg0);
{'U_Main_testFiles41', P_c0} -> 'Main_testFiles4'(P_c0, Arg0);
{'U_Main_testFiles51', P_c0} -> 'Main_testFiles5'(P_c0, Arg0);
{'U_Main_testFiles61', P_c0} -> 'Main_testFiles6'(P_c0, Arg0);
{'U_Main_testFiles71', P_c0} -> 'Main_testFiles7'(P_c0, Arg0);
{'U_Main_testFiles81', P_c0} -> 'Main_testFiles8'(P_c0, Arg0);
'U_Main_testFiles91' -> 'Main_testFiles9'(Arg0);
{'U_Prelude_Classes_Int instance of Prelude_Classes_Eq1', P_c0} -> 'Prelude_Classes_@Prelude_Classes_Eq$Int'(P_c0, Arg0);
{'U_Prelude_putStr01', P_c0} -> 'Prelude_putStr0'(P_c0, Arg0);
'U_Prelude_putStr11' -> 'Prelude_putStr1'(Arg0);
{'U_io_bind1', P_c0, P_c1, P_c2, P_c3, P_c4} -> 'io_bind'(P_c0, P_c1, P_c2, P_c3, P_c4, Arg0);
{'U_io_return1', P_c0, P_c1, P_c2} -> 'io_return'(P_c0, P_c1, P_c2, Arg0);
{'U_io_bind11', P_c0, P_c1, P_c2, P_c3, P_c4, P_c5} -> 'io_bind1'(P_c0, P_c1, P_c2, P_c3, P_c4, P_c5, Arg0);
'U_Prelude_Classes_Int instance of Prelude_Classes_Eq2' -> {'U_Prelude_Classes_Int instance of Prelude_Classes_Eq1', Arg0};
_Default -> undefined
end.
'EVAL0'(Arg0) -> case Arg0 of
_Default -> Arg0
end.
'Erl_closeFile'(E0) -> {'U_Erl_closeFile, close1', undefined, E0}.
'Erl_closeFile:close:0'(E0, X, W) -> ok.
'Erl_feof'(E0) -> {'U_io_bind1', undefined, undefined, undefined, {'U_Erl_feof, fileEOF1', undefined, E0}, 'U_Erl_feof01'}.
'Erl_feof0'(In0) -> {'U_io_return1', undefined, undefined, case 'APPLY0'('APPLY0'('Prelude_Classes_=='(undefined, 'U_Prelude_Classes_Int instance of Prelude_Classes_Eq2'), In0), 0) of
'Prelude_Bool_False' -> 'Prelude_Bool_True';
'Prelude_Bool_True' -> 'Prelude_Bool_False'
end}.
'Erl_feof:fileEOF:0'(E0, X, W) -> ok.
'Erl_fgetc'(E0) -> {'U_io_bind1', undefined, undefined, undefined, {'U_Erl_fgetc, getChar1', undefined, E0}, 'U_Erl_fgetc01'}.
'Erl_fgetc0'(In0) -> {'U_io_return1', undefined, undefined, In0}.
'Erl_fgetc:getChar:0'(E0, X, W) -> ok.
'Erl_fread'(E0, W) -> idris_erlang_rts:read_file(E0).
'Erl_fwrite'(E0, E1) -> {'U_io_bind1', undefined, undefined, undefined, {'U_Erl_fwrite, writeFile1', undefined, undefined, E0, E1}, 'U_Erl_fwrite01'}.
'Erl_fwrite0'(In0) -> {'U_io_return1', undefined, undefined, 'MkUnit'}.
'Erl_fwrite:writeFile:0'(E0, E1, X, X1, W) -> ok.
'Erl_openFile'(E0, E1) -> {'U_io_bind1', undefined, undefined, undefined, {'U_Erl_openFile, open1', undefined, undefined, E0, case E1 of
'Prelude_Read' -> "r";
'Prelude_ReadWrite' -> "rw";
'Prelude_Write' -> "w"
end}, 'U_Erl_openFile01'}.
'Erl_openFile0'(In0) -> {'U_io_return1', undefined, undefined, In0}.
'Erl_openFile:modeStr:0'(E0, E1, E2) -> case E2 of
'Prelude_Read' -> "r";
'Prelude_ReadWrite' -> "rw";
'Prelude_Write' -> "w"
end.
'Erl_openFile:open:0'(E0, E1, X, X1, W) -> ok.
'Force'(E0, E1, E2) -> In0 = begin 'EVAL0'(E2)end, In0.
'Main_main'() -> 'Main_testFiles'().
'Main_testFiles'() -> {'U_io_bind1', undefined, undefined, undefined, 'Prelude_putStr'(undefined, [$t, $e, $s, $t, $F, $i, $l, $e, $s, 10]), 'U_Main_testFiles101'}.
'Main_testFiles0'(In9, In10) -> {'U_Erl_closeFile, close1', undefined, In9}.
'Main_testFiles1'(In9) -> {'U_io_bind1', undefined, undefined, undefined, 'Erl_fwrite'(In9, "test"), {'U_Main_testFiles01', In9}}.
'Main_testFiles10'(In0) -> {'U_io_bind1', undefined, undefined, undefined, 'Erl_openFile'("test_file", 'Prelude_Read'), 'U_Main_testFiles91'}.
'Main_testFiles2'(In8) -> {'U_io_bind1', undefined, undefined, undefined, 'Erl_openFile'("other_file", 'Prelude_Write'), 'U_Main_testFiles11'}.
'Main_testFiles3'(In1, In7) -> {'U_io_bind1', undefined, undefined, undefined, {'U_Erl_closeFile, close1', undefined, In1}, 'U_Main_testFiles21'}.
'Main_testFiles4'(In1, In6) -> {'U_io_bind1', undefined, undefined, undefined, case In6 of
'Prelude_Bool_False' -> 'Prelude_putStr'(undefined, [$N, $o, $t, $ , $E, $O, $F, 10]);
'Prelude_Bool_True' -> 'Prelude_putStr'(undefined, [$E, $O, $F, 10])
end, {'U_Main_testFiles31', In1}}.
'Main_testFiles5'(In1, In5) -> {'U_io_bind1', undefined, undefined, undefined, 'Erl_feof'(In1), {'U_Main_testFiles41', In1}}.
'Main_testFiles6'(In1, In4) -> {'U_io_bind1', undefined, undefined, undefined, 'Prelude_putStr'(undefined, (("read from file: " ++ In4) ++ [10])), {'U_Main_testFiles51', In1}}.
'Main_testFiles7'(In1, In3) -> {'U_io_bind1', undefined, undefined, undefined, {'U_Erl_fread1', In1}, {'U_Main_testFiles61', In1}}.
'Main_testFiles8'(In1, In2) -> {'U_io_bind1', undefined, undefined, undefined, 'Prelude_putStr'(undefined, (("read char from file: " ++ [In2|""]) ++ [10])), {'U_Main_testFiles71', In1}}.
'Main_testFiles9'(In1) -> {'U_io_bind1', undefined, undefined, undefined, 'Erl_fgetc'(In1), {'U_Main_testFiles81', In1}}.
'Prelude_Bool_boolElim'(E0, E1, E2, E3) -> case E1 of
'Prelude_Bool_False' -> 'EVAL0'(E3);
'Prelude_Bool_True' -> 'EVAL0'(E2)
end.
'Prelude_Bool_not'(E0) -> case E0 of
'Prelude_Bool_False' -> 'Prelude_Bool_True';
'Prelude_Bool_True' -> 'Prelude_Bool_False'
end.
'Prelude_Classes_=='(E0, E1) -> E1.
'Prelude_Classes_@Prelude_Classes_Eq$Int'(Meth0, Meth1) -> case idris_erlang_rts:bool_cast((Meth0 =:= Meth1)) of
0 -> 'Prelude_Bool_False';
_Default -> 'Prelude_Bool_True'
end.
'Prelude_Classes_intToBool'(E0) -> case E0 of
0 -> 'Prelude_Bool_False';
_Default -> 'Prelude_Bool_True'
end.
'Prelude_putStr'(E0, E1) -> {'U_io_bind1', undefined, undefined, undefined, {'U_Prelude_putStr01', E1}, 'U_Prelude_putStr11'}.
'Prelude_putStr0'(E1, In0) -> idris_erlang_rts:write_str(E1).
'Prelude_putStr1'(In1) -> {'U_io_return1', undefined, undefined, 'MkUnit'}.
'call__IO'(E0, E1, E2) -> 'APPLY0'(E2, undefined).
'io_bind'(E0, E1, E2, E3, E4, W) -> 'APPLY0'('io_bind2'(E0, E1, E2, E3, E4, W), 'APPLY0'(E3, W)).
'io_bind0'(E0, E1, E2, E3, E4, W, In0) -> 'APPLY0'(E4, In0).
'io_bind1'(E0, E1, E2, E3, E4, W, In0) -> 'APPLY0'('io_bind0'(E0, E1, E2, E3, E4, W, In0), W).
'io_bind2'(E0, E1, E2, E3, E4, W) -> {'U_io_bind11', E0, E1, E2, E3, E4, W}.
'io_bind_case'(E0, E1, E2, E3, E4, E5, E6, E7) -> 'APPLY0'(E7, E5).
'io_return'(E0, E1, E2, W) -> E2.
'prim__concat'(Op0, Op1) -> (Op0 ++ Op1).
'prim__eqInt'(Op0, Op1) -> idris_erlang_rts:bool_cast((Op0 =:= Op1)).
'prim__intToChar'(Op0) -> Op0.
'prim__readFile'(Op0, Op1) -> idris_erlang_rts:read_file(Op1).
'prim__strCons'(Op0, Op1) -> [Op0|Op1].
'prim__writeString'(Op0, Op1) -> idris_erlang_rts:write_str(Op1).
'prim_io_bind'(E0, E1, E2, E3) -> 'APPLY0'(E3, E2).
'runMain0'() -> 'EVAL0'('APPLY0'('Main_main'(), undefined)).
'run__IO'(E0, E1) -> 'APPLY0'(E1, undefined).
'world'(E0) -> E0.
main(_Args) -> 'runMain0'().
